{"version":3,"file":"tsx-Bvw2ojYR.js","sources":["../../node_modules/refractor/lang/tsx.js"],"sourcesContent":["'use strict'\nvar refractorJsx = require('./jsx.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = tsx\ntsx.displayName = 'tsx'\ntsx.aliases = []\nfunction tsx(Prism) {\n  Prism.register(refractorJsx)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var typescript = Prism.util.clone(Prism.languages.typescript)\n    Prism.languages.tsx = Prism.languages.extend('jsx', typescript) // doesn't work with TS because TS is too complex\n    delete Prism.languages.tsx['parameter']\n    delete Prism.languages.tsx['literal-property'] // This will prevent collisions between TSX tags and TS generic types.\n    // Idea by https://github.com/karlhorky\n    // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n    var tag = Prism.languages.tsx.tag\n    tag.pattern = RegExp(\n      /(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')',\n      tag.pattern.flags\n    )\n    tag.lookbehind = true\n  })(Prism)\n}\n"],"names":["refractorJsx","require$$0","refractorTypescript","require$$1","tsx_1","tsx","Prism","typescript","tag"],"mappings":"wfACA,IAAIA,EAAeC,EAAA,EACfC,EAAsBC,EAAA,EAC1BC,EAAiBC,EACjBA,EAAI,YAAc,MAClBA,EAAI,QAAU,CAAA,EACd,SAASA,EAAIC,EAAO,CAClBA,EAAM,SAASN,CAAY,EAC3BM,EAAM,SAASJ,CAAmB,EAChC,SAAUI,EAAO,CACjB,IAAIC,EAAaD,EAAM,KAAK,MAAMA,EAAM,UAAU,UAAU,EAC5DA,EAAM,UAAU,IAAMA,EAAM,UAAU,OAAO,MAAOC,CAAU,EAC9D,OAAOD,EAAM,UAAU,IAAI,UAC3B,OAAOA,EAAM,UAAU,IAAI,kBAAkB,EAG7C,IAAIE,EAAMF,EAAM,UAAU,IAAI,IAC9BE,EAAI,QAAU,OACZ,qBAAqB,OAAS,MAAQA,EAAI,QAAQ,OAAS,IAC3DA,EAAI,QAAQ,KAClB,EACIA,EAAI,WAAa,EACrB,EAAKF,CAAK,CACV","x_google_ignoreList":[0]}