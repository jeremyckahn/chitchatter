{"version":3,"file":"erlang-DFUidcAo.js","sources":["../../node_modules/refractor/lang/erlang.js"],"sourcesContent":["'use strict'\n\nmodule.exports = erlang\nerlang.displayName = 'erlang'\nerlang.aliases = []\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\b(?:after|case|catch|end|fun|if|of|receive|try|when)\\b/,\n    number: [\n      /\\$\\\\?./,\n      /\\b\\d+#[a-z0-9]+/i,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    ],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  }\n}\n"],"names":["erlang_1","erlang","Prism"],"mappings":"qaAEAA,EAAiBC,EACjBA,EAAO,YAAc,SACrBA,EAAO,QAAU,CAAA,EACjB,SAASA,EAAOC,EAAO,CACrBA,EAAM,UAAU,OAAS,CACvB,QAAS,MACT,OAAQ,CACN,QAAS,wBACT,OAAQ,IAEV,kBAAmB,CACjB,QAAS,8BACT,MAAO,YAET,cAAe,CACb,QAAS,wBACT,MAAO,QAET,QAAS,qBACT,QAAS,0DACT,OAAQ,CACN,SACA,mBACA,8CAEF,SAAU,sBACV,SAAU,CAER,QAAS,gCACT,WAAY,IAEd,SAAU,CACR,+GACA,CAEE,QAAS,iBACT,WAAY,IAEd,CAEE,QAAS,iBACT,WAAY,EACpB,GAEI,KAAM,gBACN,YAAa,uBACjB,CACA","x_google_ignoreList":[0]}