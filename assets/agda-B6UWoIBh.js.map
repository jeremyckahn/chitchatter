{"version":3,"file":"agda-B6UWoIBh.js","sources":["../../node_modules/refractor/lang/agda.js"],"sourcesContent":["'use strict'\n\nmodule.exports = agda\nagda.displayName = 'agda'\nagda.aliases = []\nfunction agda(Prism) {\n  ;(function (Prism) {\n    Prism.languages.agda = {\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      punctuation: /[(){}⦃⦄.;@]/,\n      'class-name': {\n        pattern: /((?:data|record) +)\\S+/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n    }\n  })(Prism)\n}\n"],"names":["agda_1","agda","Prism"],"mappings":"qaAEAA,EAAiBC,EACjBA,EAAK,YAAc,OACnBA,EAAK,QAAU,CAAA,EACf,SAASA,EAAKC,EAAO,EACjB,SAAUA,EAAO,CACjBA,EAAM,UAAU,KAAO,CACrB,QAAS,4BACT,OAAQ,CACN,QAAS,sCACT,OAAQ,IAEV,YAAa,cACb,aAAc,CACZ,QAAS,yBACT,WAAY,IAEd,SAAU,CACR,QAAS,iCACT,WAAY,IAEd,SAAU,CACR,QAAS,qCACT,WAAY,IAEd,QACE,+VACR,CACA,GAAKA,CAAK,CACV","x_google_ignoreList":[0]}