{"version":3,"file":"chaiscript-EbxPsJRZ.js","sources":["../../node_modules/refractor/lang/chaiscript.js"],"sourcesContent":["'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = chaiscript\nchaiscript.displayName = 'chaiscript'\nchaiscript.aliases = []\nfunction chaiscript(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.chaiscript = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': [\n      {\n        // e.g. class Rectangle { ... }\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      },\n      {\n        // e.g. attr Rectangle::height, def Rectangle::area() { ... }\n        pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\n        lookbehind: true\n      }\n    ],\n    keyword:\n      /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\n    number: [Prism.languages.cpp.number, /\\b(?:Infinity|NaN)\\b/],\n    operator:\n      />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\n  })\n  Prism.languages.insertBefore('chaiscript', 'operator', {\n    'parameter-type': {\n      // e.g. def foo(int x, Vector y) {...}\n      pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\n      lookbehind: true,\n      alias: 'class-name'\n    }\n  })\n  Prism.languages.insertBefore('chaiscript', 'string', {\n    'string-interpolation': {\n      pattern:\n        /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-expression': {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              inside: Prism.languages.chaiscript\n            },\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n}\n"],"names":["refractorCpp","require$$0","chaiscript_1","chaiscript","Prism"],"mappings":"2cACA,IAAIA,EAAeC,EAAA,EACnBC,EAAiBC,EACjBA,EAAW,YAAc,aACzBA,EAAW,QAAU,CAAA,EACrB,SAASA,EAAWC,EAAO,CACzBA,EAAM,SAASJ,CAAY,EAC3BI,EAAM,UAAU,WAAaA,EAAM,UAAU,OAAO,QAAS,CAC3D,OAAQ,CACN,QAAS,kCACT,WAAY,GACZ,OAAQ,IAEV,aAAc,CACZ,CAEE,QAAS,kBACT,WAAY,IAEd,CAEE,QAAS,kCACT,WAAY,EACpB,GAEI,QACE,gIACF,OAAQ,CAACA,EAAM,UAAU,IAAI,OAAQ,sBAAsB,EAC3D,SACE,0EACH,EACDA,EAAM,UAAU,aAAa,aAAc,WAAY,CACrD,iBAAkB,CAEhB,QAAS,wBACT,WAAY,GACZ,MAAO,YACb,EACG,EACDA,EAAM,UAAU,aAAa,aAAc,SAAU,CACnD,uBAAwB,CACtB,QACE,uFACF,WAAY,GACZ,OAAQ,GACR,OAAQ,CACN,cAAe,CACb,QACE,oEACF,WAAY,GACZ,OAAQ,CACN,2BAA4B,CAC1B,QAAS,wBACT,WAAY,GACZ,OAAQA,EAAM,UAAU,YAE1B,4BAA6B,CAC3B,QAAS,YACT,MAAO,aACrB,CACA,GAEQ,OAAQ,SAChB,CACA,EACG,CACH","x_google_ignoreList":[0]}