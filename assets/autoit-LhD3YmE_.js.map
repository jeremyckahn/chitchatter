{"version":3,"file":"autoit-LhD3YmE_.js","sources":["../../node_modules/refractor/lang/autoit.js"],"sourcesContent":["'use strict'\n\nmodule.exports = autoit\nautoit.displayName = 'autoit'\nautoit.aliases = []\nfunction autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [\n      /;.*/,\n      {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern:\n          /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:ce|comments-end)/m,\n        lookbehind: true\n      }\n    ],\n    url: {\n      pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^[\\t ]*)#[\\w-]+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword:\n      /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  }\n}\n"],"names":["autoit_1","autoit","Prism"],"mappings":"qaAEAA,EAAiBC,EACjBA,EAAO,YAAc,SACrBA,EAAO,QAAU,CAAA,EACjB,SAASA,EAAOC,EAAO,CACrBA,EAAM,UAAU,OAAS,CACvB,QAAS,CACP,MACA,CAEE,QACE,sEACF,WAAY,EACpB,GAEI,IAAK,CACH,QAAS,mDACT,WAAY,IAEd,OAAQ,CACN,QAAS,kCACT,OAAQ,GACR,OAAQ,CACN,SAAU,cAClB,GAEI,UAAW,CACT,QAAS,oBACT,WAAY,GACZ,MAAO,WAET,SAAU,cAEV,SAAU,UACV,QACE,yOACF,OAAQ,kDACR,QAAS,sBACT,SAAU,+CACV,YAAa,aACjB,CACA","x_google_ignoreList":[0]}